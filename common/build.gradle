plugins {
    id 'java'
    id 'org.spongepowered.gradle.vanilla' version '0.2.1-SNAPSHOT'
    id 'maven-publish'
    id "com.github.breadmoirai.github-release" version "2.4.1"
}

archivesBaseName = "${artifact_name}-Common"

minecraft {
    version(minecraft_version)
    accessWideners "src/main/resources/bovinesandbuttercups-common.accesswidener"
}

repositories {
    maven {
        url 'https://jitpack.io'
    }
    maven {
        // location of the maven that hosts JEI files since January 2023
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
    maven {
        url 'https://maven.terraformersmc.com/'
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    maven {
        name = 'Modrinth'
        url = 'https://api.modrinth.com/maven'
        content {
            includeGroup 'maven.modrinth'
        }
    }
    mavenCentral()
}

dependencies {
    compileOnly group: 'org.spongepowered', name:'mixin', version:'0.8.5'
    compileOnly group: 'org.ow2.asm', name: 'asm-tree', version: '9.4'

    compileOnly(annotationProcessor("io.github.llamalad7:mixinextras-common:${mixin_extras_version}"))

    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'

    compileOnly("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}")
    compileOnly "dev.emi:emi-xplat-mojmap:${emi_version}:api"
}

processResources {
    def buildProps = project.properties.clone()

    filesMatching(['pack.mcmeta']) {

        expand buildProps
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components.java
        }
    }

    repositories {
        maven {
            name = "greenhouse"
            url = "https://repo.greenhouse.house/releases"
            credentials {
                username System.getenv('MAVEN_USERNAME')
                password System.getenv('MAVEN_PASSWORD')
            }
            authentication {
                create("basic", BasicAuthentication)
            }
        }
    }
}

githubRelease {
    if (System.getenv("GITHUB_TOKEN") == null) return
    token = System.getenv("GITHUB_TOKEN")
    owner = gh_owner
    repo = gh_repo
    tagName = version
    targetCommitish = gh_commitish
    releaseName = "$project.mod_name v$project.version"
    body {
        new File("$project.rootDir/CHANGELOG.md").getText('UTF-8')
    }
}