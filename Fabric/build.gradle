plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
    id 'maven-publish'
    id 'idea'
}

archivesBaseName = "${project.mod_name}-fabric"

repositories {
    maven {
        url "https://maven.terraformersmc.com/"
    }
    maven {
        url 'https://jitpack.io'
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()

    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"

    modImplementation "com.terraformersmc:modmenu:${modmenu_version}"

    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'
    implementation project(":Common")
}

loom {
    accessWidenerPath = file("src/main/resources/bovinesandbuttercups.accesswidener")
    mods {
        register(mod_id) {
            sourceSet sourceSets.main
            sourceSet project(":Common").sourceSets.main
        }
    }
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
    
    def environment = System.getenv("ENVIRONMENT")
    if (environment != "production") {
        from(rootProject.rootDir.absolutePath + "/testdata") { into 'data' }
        from(rootProject.rootDir.absolutePath + "/testassets") { into 'assets'}
    }
}

jar {
    from project(":Common").sourceSets.main.output
}

javadoc {
    source project(":Common").sourceSets.main.allJava
}

sourcesJar {
    from project(":Common").sourceSets.main.allSource
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components.java
        }
    }

    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}
