plugins {
    id "org.quiltmc.loom" version "1.0.+"
    id 'maven-publish'
}

archivesBaseName = "${artifact_name}-Quilt"

repositories {
    maven {
        name 'Quilt (Release)'
        url 'https://maven.quiltmc.org/repository/release'
    }
    maven {
        name 'Quilt (Snapshot)'
        url 'https://maven.quiltmc.org/repository/snapshot'
        content {
            includeGroup 'org.quiltmc.fabric_api_qsl'
            includeGroupByRegex 'org\\.quiltmc\\.qsl(?:\\.[a-z_]+)?'
        }
    }
    maven {
        name = 'Modrinth'
        url = 'https://api.modrinth.com/maven'
        content {
            includeGroup 'maven.modrinth'
        }
    }
    maven {
        url 'https://maven.terraformersmc.com/'
    }
    maven {
        url 'https://jitpack.io'
    }
    maven {
        name = 'Ladysnake Mods'
        url = 'https://ladysnake.jfrog.io/artifactory/mods'
    }
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    maven { url "https://maven.shedaniel.me/" }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "org.quiltmc:quilt-loader:${quilt_loader_version}"

    modImplementation("org.quiltmc.quilted-fabric-api:quilted-fabric-api:${quilt_stdlib_version}") {
        exclude group: "net.fabricmc"
    }

    modImplementation "maven.modrinth:inspecio:${inspecio_version}"
    modRuntimeOnly "com.terraformersmc:modmenu:${modmenu_version}"

    modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${cca_version}"
    include "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${cca_version}"
    modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${cca_version}"
    include "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${cca_version}"

    implementation "com.github.LlamaLad7:MixinExtras:${mixin_extras_version}"
    include "com.github.LlamaLad7:MixinExtras:${mixin_extras_version}"
    annotationProcessor "com.github.LlamaLad7:MixinExtras:${mixin_extras_version}"

    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'
    compileOnly group: 'com.google.auto.service', name: 'auto-service', version: '1.0.1'
    annotationProcessor group: 'com.google.auto.service', name: 'auto-service', version: '1.0.1'

    implementation(project(":Common"))
    implementation(project(path: ":Fabriclike", configuration: "namedElements")) {
        exclude group: "net.merchantpug.bovinesandbuttercups", module: "Common"
    }

    // TODO: Reimplement JEI
    // modCompileOnlyApi("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}")
    // modCompileOnlyApi("mezz.jei:jei-${minecraft_version}-fabric-api:${jei_version}")
    // modRuntimeOnly("mezz.jei:jei-${minecraft_version}-fabric:${jei_version}")

    modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${rei_version}"
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-default-plugin-fabric:${rei_version}"

    /*
    modRuntimeOnly("me.shedaniel:RoughlyEnoughItems-fabric:${rei_version}") {
        exclude module: 'dev.architectury'
    }
    modRuntimeOnly "dev.architectury:architectury-fabric:${architectury_version}"
    */

    modCompileOnly "dev.emi:emi:${emi_version}"
    // modRuntimeOnly "dev.emi:emi:${emi_version}"

    modRuntimeOnly "maven.modrinth:lazydfu:0.1.3"
}

loom {
    accessWidenerPath = file("src/main/resources/bovinesandbuttercups.accesswidener")
    mixin {
        defaultRefmapName = "bovinesandbuttercups-refmap.json"
    }

    runs {
        client {
            client()
            setConfigName("Quilt Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Quilt Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }
}

processResources {
    from project(":Common").sourceSets.main.resources
    from project(":Fabriclike").sourceSets.main.resources

    exclude("bovinesandbuttercups-common.accesswidener", "bovinesandbuttercups-fabriclike.accesswidener")

    inputs.property "version", project.version

    filesMatching("quilt.mod.json") {
        expand "version": project.version
    }

    def environment = System.getenv("ENVIRONMENT")
    if (environment != "production") {
        from(rootProject.rootDir.absolutePath + "/testdata") { into 'data' }
        from(rootProject.rootDir.absolutePath + "/testassets") { into 'assets'}
    }
}

tasks.withType(JavaCompile) {
    source(project(":Fabriclike").sourceSets.main.allSource)
}

jar {
    from("LICENSE") {
        rename { "${it}_${mod_name}"}
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components.java
        }
    }

    repositories {
        maven {
            name = "merchantpug"
            url = "https://maven.merchantpug.net/releases"
            credentials(PasswordCredentials)
            authentication {
                create("basic", BasicAuthentication)
            }
        }
    }
}